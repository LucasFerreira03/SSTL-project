#include <Adafruit_LiquidCrystal.h>
#include <Servo.h>
#include <WiFi.h>
#include <HTTPClient.h>

Adafruit_LiquidCrystal lcd(0);
Servo servo;

// Sensores e variáveis
int baseTemp = 0;
int celcius = 0;
int baseph = 0;
int TRIG = A3;
int ECO = A2;
int DURACION;
int DISTANCIA;

// Wi-Fi e servidor
const char* ssid = "SEU_WIFI";
const char* password = "SUA_SENHA";
const char* servidor_php = "http://SEU_SERVIDOR/registrar.php";

void setup() {
  pinMode(A0, INPUT);
  pinMode(A1, INPUT);
  pinMode(TRIG, OUTPUT);
  pinMode(ECO, INPUT);
  Serial.begin(9600);

  pinMode(2, OUTPUT); pinMode(3, OUTPUT);
  pinMode(4, OUTPUT); pinMode(5, OUTPUT);
  pinMode(6, OUTPUT); pinMode(7, OUTPUT);

  lcd.begin(16, 2);
  servo.attach(8);

  WiFi.begin(ssid, password);
  Serial.print("Conectando ao Wi-Fi");
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("\nWi-Fi conectado!");
}

void loop() {
  // === Temperatura ===
  baseTemp = 40;
  celcius = map(((analogRead(A1) - 20) * 3.04), 0, 1023, -40, 125);
  Serial.print(celcius); Serial.println("C");

  if (celcius < baseTemp) {
    digitalWrite(2, LOW); digitalWrite(3, LOW);
    servo.write(90);
  }
  if (celcius >= baseTemp && celcius < baseTemp + 80) {
    digitalWrite(2, HIGH); digitalWrite(3, LOW);
  }
  if (celcius > baseTemp + 10 && celcius < baseTemp + 150) {
    digitalWrite(2, HIGH); digitalWrite(3, HIGH);
  }
  if (celcius > baseTemp + 20 && celcius < baseTemp + 300) {
    digitalWrite(2, HIGH); digitalWrite(3, HIGH);
    lcd.setCursor(1, 0); lcd.print("Perigo ");
    lcd.setCursor(1, 1); lcd.print("Temperatura");
    delay(2000); lcd.clear();
  }
  if (celcius > baseTemp + 20 && celcius < baseTemp + 600) {
    digitalWrite(2, HIGH); digitalWrite(3, HIGH);
    lcd.setCursor(1, 0); lcd.print("Aberto valvula ");
    lcd.setCursor(1, 1); lcd.print("de scape !!!");
    delay(2000); lcd.clear(); servo.write(0); delay(1000);
  }
  int tempAtual = celcius;

  // === pH ===
  baseph = 40;
  celcius = map(((analogRead(A0) - 20) * 3.04), 0, 1023, -40, 125);
  Serial.print(celcius); Serial.println("C");

  if (celcius < baseph) {
    digitalWrite(4, LOW); digitalWrite(5, LOW); servo.write(90);
  }
  if (celcius >= baseph && celcius < baseph + 80) {
    digitalWrite(4, HIGH); digitalWrite(5, LOW);
  }
  if (celcius > baseph + 10 && celcius < baseph + 300) {
    digitalWrite(4, HIGH); digitalWrite(5, HIGH);
  }
  if (celcius > baseph + 20 && celcius < baseph + 600) {
    digitalWrite(4, HIGH); digitalWrite(5, HIGH);
    lcd.setCursor(1, 0); lcd.print("Perigo ");
    lcd.setCursor(1, 1); lcd.print("PH");
    delay(2000); lcd.clear();
  }
  if (celcius > baseTemp + 20 && celcius < baseTemp + 600) {
    digitalWrite(4, HIGH); digitalWrite(5, HIGH);
    lcd.setCursor(1, 0); lcd.print("Aberto valvula ");
    lcd.setCursor(1, 1); lcd.print("de scape !!!");
    delay(2000); lcd.clear(); servo.write(0); delay(1000);
  }
  int phAtual = celcius;

  // === Nível ===
  digitalWrite(TRIG, HIGH); delay(10); digitalWrite(TRIG, LOW);
  DURACION = pulseIn(ECO, HIGH);
  DISTANCIA = DURACION / 58.2;
  Serial.println(DISTANCIA); delay(200);

  if (DISTANCIA < 250) {
    digitalWrite(6, LOW); digitalWrite(7, LOW); servo.write(90);
  }
  if (DISTANCIA < 200) {
    digitalWrite(6, HIGH); digitalWrite(7, HIGH);
  }
  if (DISTANCIA < 150) {
    digitalWrite(6, HIGH); digitalWrite(7, HIGH);
  }
  if (DISTANCIA < 100) {
    digitalWrite(6, HIGH); digitalWrite(7, HIGH);
    lcd.setCursor(1, 0); lcd.print("Perigo ");
    lcd.setCursor(1, 1); lcd.print("Volume do tanque");
    delay(2000); lcd.clear();
  }
  if (DISTANCIA < 50) {
    digitalWrite(4, HIGH); digitalWrite(5, HIGH);
    lcd.setCursor(1, 0); lcd.print("Aberto valvula ");
    lcd.setCursor(1, 1); lcd.print("de scape !!!");
    delay(2000); lcd.clear(); servo.write(0); delay(1000);
  }
  int nivelAtual = map(30 - DISTANCIA, 0, 30, 0, 100);

  // === Envia dados para o PHP ===
  if (WiFi.status() == WL_CONNECTED) {
    HTTPClient http;
    http.begin(servidor_php);
    http.addHeader("Content-Type", "application/json");

    String json = "{\"tanque_id\":1,\"temperatura\":" + String(tempAtual) +
                  ",\"ph\":" + String(phAtual) +
                  ",\"nivel\":" + String(nivelAtual) + "}";

    int resposta = http.POST(json);
    if (resposta > 0) {
      Serial.println("Enviado para PHP: ");
      Serial.println(http.getString());
    } else {
      Serial.print("Erro HTTP: ");
      Serial.println(http.errorToString(resposta).c_str());
    }
    http.end();
  }

  delay(10000); // Espera antes da próxima leitura/envio
}
